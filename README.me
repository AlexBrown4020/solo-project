 This was created during my time as a student at Code Chrysalis.

TIMELINE: 
Timeline is a tool for visualizing events by their date; as well as showing actors directly involved.
It can also show other events running in parallel and how actors interact or not.  
The API is intended to help clarify complicated occurances: such as historical events, popular television shows,
literature and much more.

GETTING STARTED:
1. Initialize your project with npm to grab your package.json file ( npm init --yes )
2. Install your apollo server and graphQL dependencies ( npm install apollo-server graphql )
3. Install knex globally ( npm install knex -g )
4. Install your database; in this case, I've used postgresQL. ( npm install pg )
5. If you want to try testing, also install Chai and Mocha ( npm install chai mocha )
6. In your main index.js or server.js file, require the apollo server ( const { ApolloServer } = require('apollo-server'); )
7. Run migrations and seed files ( knex run migrate / knex run seed)

FEATURES:
- REST API GraphQL with CRUD functionality.
- Allows handling of events and actors for a desired timeline.
- Apollo Server.
- Operates tests with Chai and Mocha.

DEPENDENCIES:
- Apollo-Server 
- GraphQL
- Knex 
- Nodemon
- PostgresQL
- Chai
- Mocha

ENDPOINTS:
Endpoints for timeline are the following:
QUERIES:
- AllEvents (query all events in the table)
- AllActors (query all actors in the table)
- FindEventByTitle(title:"title name") (query a single event by its title)
- FindEventsByDate(date: "YYYY-DD-MM") (query all events by a specified date)
- FindActorByName(name:"actor name") (query a single actor by their name)
- FindActorsByCountry(country: "country name") (query a group of actors by their country)
- FindActorsByAge
- FindActorsByDateOfBirth
- FindActorById

MUTATIONS:
- AddEvent({title:"", date:"YYYY-DD-MM", description:""}) *** Adds events to the table.  Title and date are required, however, titles must be unique. ***
- AddActor({name:"", country:""}) *** Adds an actor to the table.  An id is incrementally given to new actors ***
- DeleteEvent(title:"") *** Delete an event of a given title ***
- DeleteActor(name:"") *** Delete an actor of the given name ***
- UpdateEvent(title:"", input:{title:"",date:"",description:""}) *** Updates an event with the given title with parameters passed into input ***
- UpdateActor(name:"", input:{name:"", country:""}) *** Update an actor with the given name with parameters passed into input ***

--Info:
- Currently port crashes when looking for \dist\index.html
- index.html doesn't exist, needs to be built? Do we require vue frontend now?